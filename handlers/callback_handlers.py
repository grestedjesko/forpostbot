from aiogram import Router, F
from aiogram.types import CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession
from aiogram.fsm.context import FSMContext
from src.states import TopUpBalance
from src.keyboards import Keyboard
import config
from shared.pricelist import PriceList
from shared.user import BalanceManager

router = Router()

@router.callback_query(F.data == 'price')
async def get_price(call: CallbackQuery, session: AsyncSession):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
    prices = await PriceList().get(session=session)

    text = f'''
–ú–æ–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ –ª—é–±—É—é —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä 500 —Ä—É–±–ª–µ–π) –∏ —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ—à—Ç—É—á–Ω–æ
–∏–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–∞–∫–µ—Ç —Å –∞–≤—Ç–æ—Ä–∞–∑–º–µ—â–µ–Ω–∏–µ–º.

{config.spec_emoji_1} <b> {prices[0].name} </b> ‚Äî {prices[0].price} ‚ÇΩ/–æ–±—ä—è–≤–ª–µ–Ω–∏–µ'''

    if len(prices) > 1:
        text += "\n"*2
        text += f"üõç <b>–ü–∞–∫–µ—Ç–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ:</b>"
        for packet in prices[1:]:
            text += "\n"
            text += f"{packet.name} - {packet.price} ‚ÇΩ"
        text += "\n" * 2 + "‚ùì–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–Ω–æ–ø–∫–∞? –ü–∏—à–∏ –±–æ—Ç—É /start"

    keyboard = Keyboard.price_menu()
    await call.message.edit_text(text=text, reply_markup=keyboard, parse_mode='html')


@router.callback_query(F.data == 'balance')
async def get_balance(call: CallbackQuery, session: AsyncSession):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±–∞–ª–∞–Ω—Å–µ"""
    balance = await BalanceManager().get_balance(user_id=call.from_user.id, session=session)

    text = f"""–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ"""

    keyboard = Keyboard.balance_menu()
    await call.message.edit_text(text, reply_markup=keyboard)


@router.callback_query(F.data.in_(['buy_packet', 'buypacket']))
async def get_packet_menu(call: CallbackQuery, session: AsyncSession):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –≤—ã–±–æ—Ä–æ–º –ø–∞–∫–µ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏"""
    pricelist = await PriceList().get(session=session)

    await call.message.edit_text('''–ü–∞–∫–µ—Ç—ã –¥–∞—é—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –æ—Ç–∫–ª–∏–∫–æ–≤, —á–µ–º —à—Ç—É—á–Ω—ã–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è. –ê —Ç–∞–∫–∂–µ –ø–æ–∑–≤–æ–ª—è—é—Ç —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.

–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–∞–∫–µ—Ç–∞:''', reply_markup=Keyboard.get_packets_keyboard(packets_list=pricelist))


@router.callback_query(F.data.in_({
    'upbalance', 'upbalance_cas', 'upbalance_sber', 'upbalance_yoo', 'upbalance_lot'}))
async def update_balance(call: CallbackQuery, state: FSMContext):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞"""
    await call.message.delete()
    await call.message.answer(
        "<b>–ù–∞–ø–∏—à–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —á–∏—Å–ª–æ–º </b> (–ü—Ä–∏–º–µ—Ä: 500)",
        reply_markup=Keyboard.cancel_menu(),
        parse_mode='html'
    )
    await state.set_state(TopUpBalance.amount)

@router.callback_query(F.data == 'back')
async def back_menu(call: CallbackQuery):
    """–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    hello_message = (config.main_menu_text % call.from_user.first_name)
    await call.message.edit_text(hello_message, reply_markup=Keyboard.first_keyboard())


@router.callback_query(F.data == 'x')
async def recomended_designer_callback(callback_query: CallbackQuery):
    await callback_query.answer(
        text="üèÖ –≠—Ç–æ—Ç –¥–∏–∑–∞–π–Ω–µ—Ä - –ø—Ä–æ–≤–µ—Ä–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω –∫ —Ä–∞–±–æ—Ç–µ.",
        show_alert=True
    )


@router.callback_query(F.data == 'getprize')
async def get_lotery_prize(callback_query: CallbackQuery):
    pass