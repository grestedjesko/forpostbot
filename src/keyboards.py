from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from config import post_emoji_1, support_link

class Keyboard:
    @staticmethod
    def first_keyboard() -> InlineKeyboardMarkup:
        keyboard = [
            [InlineKeyboardButton(text="üîñ –¢–∞—Ä–∏—Ñ—ã", callback_data="price"),
             InlineKeyboardButton(text="üí∏ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="upbalance")],
            [InlineKeyboardButton(text=f"{post_emoji_1} –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ", callback_data="create")],
            [InlineKeyboardButton(text="üí∞ –ë–∞–ª–∞–Ω—Å", callback_data="balance"),
             InlineKeyboardButton(text="–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞", url=support_link)]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def balance_menu():
        keyboard = [
            [InlineKeyboardButton(text="üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="upbalance")],
            [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data="back")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def price_menu():
        keyboard = [
            [InlineKeyboardButton(text="üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="upbalance")],
            [InlineKeyboardButton(text="üõç –ö—É–ø–∏—Ç—å –ø–∞–∫–µ—Ç", callback_data="buypacket")],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def post_packet_menu():
        keyboard = [
            [InlineKeyboardButton(text='‚å® –†—É—á–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è', callback_data='create_hand')],
            [InlineKeyboardButton(text='‚öô –ê–≤—Ç–æ—Ä–∞–∑–º–µ—â–µ–Ω–∏–µ', callback_data='create_auto')],
            [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def cancel_menu():
        return ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞')]],
            resize_keyboard=True,
            one_time_keyboard=True
        )

    @staticmethod
    def post_onetime_menu(post_id):
        keyboard = [
            [InlineKeyboardButton(text="üí¨ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data=f'post_onetime_id={post_id}')],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f'cancel_post_id={post_id}'),
             InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f'edit_post_id={post_id}')],
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def payment_keyboard(link):
        keyboard = [
            [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", url=link)],
            [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back')]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def start_auto_posting(post_id):
        keyboard = [
            [InlineKeyboardButton(text="‚ö°Ô∏è –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—é", callback_data=f'start_autopost_id={post_id}')],
            [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data=f"edit_autopost_id={post_id}")],
            [InlineKeyboardButton(text="‚ùå –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data=f"cancel_autopost_id={post_id}")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def get_packets_keyboard(packets_list: list):
        builder = InlineKeyboardBuilder()
        for packet in packets_list:
            if packet.id == 1:
                continue

            button_title = packet.button_title
            if not button_title:
                button_title = packet.name
            builder.add(InlineKeyboardButton(text=button_title, callback_data=f"buy_packet_id={packet.id}"))

        builder.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='price'))
        builder.adjust(1)
        return builder.as_markup()